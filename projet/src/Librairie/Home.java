/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Librairie;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author OUADI
 */



public class Home extends javax.swing.JFrame {

    /**
     * Creates new form home2
     */
    PreparedStatement pst;
    ResultSet rs;
 Connection connection ;
    public Home() {
        initComponents();
     try {
            connection = DriverManager.getConnection("jdbc:sqlite:data.db");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        buttonMakeOver1 = new komponenMakeOver.buttonMakeOver();
        buttonMakeOver6 = new komponenMakeOver.buttonMakeOver();
        btnPesan = new komponenMakeOver.buttonMakeOver();
        buttonMakeOver7 = new komponenMakeOver.buttonMakeOver();
        jScrollPane1 = new javax.swing.JScrollPane();
        livres = new javax.swing.JTable();
        btn_out = new komponenMakeOver.buttonMakeOver();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jDesktopPane1.setBackground(new java.awt.Color(153, 102, 255));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(85, 23));

        buttonMakeOver1.setForeground(new java.awt.Color(255, 255, 255));
        buttonMakeOver1.setText("Supprimer");
        buttonMakeOver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMakeOver1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonMakeOver1);
        buttonMakeOver1.setBounds(420, 360, 160, 30);

        buttonMakeOver6.setForeground(new java.awt.Color(255, 255, 255));
        buttonMakeOver6.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jDesktopPane1.add(buttonMakeOver6);
        buttonMakeOver6.setBounds(0, 60, 840, 10);

        btnPesan.setForeground(new java.awt.Color(255, 255, 255));
        btnPesan.setText("Ajouter");
        btnPesan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesanActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btnPesan);
        btnPesan.setBounds(240, 360, 160, 30);

        buttonMakeOver7.setForeground(new java.awt.Color(255, 255, 255));
        buttonMakeOver7.setText("    .:: Bienvenue à  notre Librairie ::.");
        buttonMakeOver7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        buttonMakeOver7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMakeOver7ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(buttonMakeOver7);
        buttonMakeOver7.setBounds(-10, 0, 840, 80);

        livres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code livre", "Titre", "Auteur"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        livres.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        livres.setGridColor(new java.awt.Color(153, 102, 255));
        livres.setRowHeight(25);
        jScrollPane1.setViewportView(livres);
        if (livres.getColumnModel().getColumnCount() > 0) {
            livres.getColumnModel().getColumn(0).setResizable(false);
            livres.getColumnModel().getColumn(1).setResizable(false);
        }

        jDesktopPane1.add(jScrollPane1);
        jScrollPane1.setBounds(50, 130, 730, 160);

        btn_out.setForeground(new java.awt.Color(255, 255, 255));
        btn_out.setText("Retour");
        btn_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_outActionPerformed(evt);
            }
        });
        jDesktopPane1.add(btn_out);
        btn_out.setBounds(60, 360, 160, 30);

        jButton1.setBackground(new java.awt.Color(178, 140, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Modifier");
        jButton1.setToolTipText("");
        jButton1.setBorderPainted(false);
        jButton1.setMaximumSize(new java.awt.Dimension(85, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(85, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(85, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(600, 360, 160, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 832, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMakeOver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMakeOver1ActionPerformed
       DefaultTableModel model = (DefaultTableModel) livres.getModel();
        int row = livres.getSelectedRow();
        if(row != -1) 
            {              
              
        String id = livres.getModel().getValueAt(row, 0).toString();
        
        String delRow = "delete from livres where code_livre=?";
        try {
           
            pst = connection.prepareStatement(delRow); 
            pst.setString(1, id);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Livre supprimé!!!!!");
             model.removeRow(row);
            //showData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,  e.getMessage());
        }
            }
        else 
           JOptionPane.showMessageDialog(null, "Veuillez sélectionner un livre pour le supprimer"); 
    }//GEN-LAST:event_buttonMakeOver1ActionPerformed

    private void btnPesanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesanActionPerformed
        dispose();
         
        try {
           AddBook add  = new AddBook();
            add.setTitle("Ajouter un livre");
            add.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
                       
    }//GEN-LAST:event_btnPesanActionPerformed

    private void buttonMakeOver7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMakeOver7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonMakeOver7ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       showData();
    }//GEN-LAST:event_formWindowOpened

    private void btn_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_outActionPerformed
        // TODO add your handling code here:
         LibrairieHome librairieHome = new LibrairieHome();
        librairieHome.setVisible(true);
        this.dispose(); // Close the current frame
        
    }//GEN-LAST:event_btn_outActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Get the selected row index from the table
        int selectedRowIndex = livres.getSelectedRow();
    
    // Check if a row is selected
        if (selectedRowIndex != -1) {
            // Get the data from the selected row
            String codeLivre = livres.getValueAt(selectedRowIndex, 0).toString();
            String titre = livres.getValueAt(selectedRowIndex, 1).toString();
            String auteur = livres.getValueAt(selectedRowIndex, 2).toString();
        
        // Pass the connection object to the constructor of ModifyDialog
        ModifyDialog modifyDialog = new ModifyDialog(this, true, codeLivre, titre, auteur, connection);
        modifyDialog.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à modifier.", "Aucune ligne sélectionnée", JOptionPane.WARNING_MESSAGE);
    }
 
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void showData() {
        
         try
     {
        
    pst = connection.prepareStatement("select * from livres");
    rs = pst.executeQuery();
    while (rs.next()) {
        String id = rs.getString("code_livre");
        String titre = rs.getString("titre");
        String auteur = rs.getString("auteur");
        
        String tbData [] = {id,titre,auteur};
        DefaultTableModel tblModel = (DefaultTableModel) livres.getModel();
        tblModel.addRow(tbData);
    }
}
     catch (SQLException e)
     {
     e.printStackTrace();
  }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private komponenMakeOver.buttonMakeOver btnPesan;
    private komponenMakeOver.buttonMakeOver btn_out;
    private komponenMakeOver.buttonMakeOver buttonMakeOver1;
    private komponenMakeOver.buttonMakeOver buttonMakeOver6;
    public komponenMakeOver.buttonMakeOver buttonMakeOver7;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable livres;
    // End of variables declaration//GEN-END:variables
}
